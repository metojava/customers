plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		//languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add('-parameters')
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.apache.httpcomponents.client5:httpclient5'
	testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}

jacoco {
    toolVersion = "0.8.11" // Replace with the desired version
}

jacocoTestReport { 
	reports { 
		xml.required = false 
		csv.required = false 
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml') 
		}
}

jacocoTestCoverageVerification { 
	violationRules { 
		rule { 
			limit { 
				minimum = 0.8
			} 
		} 
	} 
}

tasks.named('test') {
	useJUnitPlatform()
}
